# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  [push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          echo "$SSH_KEY" > ~/.ssh/staging.key
          chmod 600 ~/.ssh/staging.key
          cat >>~/.ssh/config <<END
          Host staging
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/staging.key
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
       
      - name: Run deploy script
        run: /home/ec2-user/contechos/deploy.sh
       
      #- name: Stop the server
      #  run: |
      #    ssh staging 'sudo systemctl stop nginx'
      #    ssh staging 'sudo systemctl stop NodeServer.service'
          
      #- name: Remove and redploy
      #  run: ssh staging 'rm -rf contechos/ContechOS'

      #- name: Check out the source
      #  run: ssh staging 'cd contechos/ && git clone -b dev https://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@github.com/nikolai4D/ContechOS.git'

      #- name: Start the server
      #  if: ${{ always() }}
      #  run: |
      #    ssh staging 'cd contechos/ContechOS/ && npm install'
      #    ssh staging 'sudo systemctl daemon-reload'
      #    ssh staging 'sudo systemctl start NodeServer.service'
      #    ssh staging 'sudo systemctl start nginx'

      #- name: Stop the server
      #  run: ssh staging 'sudo systemctl stop my-application'

      #- name: Check out the source
      #  run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

      #- name: Start the server
      #  if: ${{ always() }}
      #  run: ssh staging 'sudo systemctl start my-application'
